{"ast":null,"code":"var _jsxFileName = \"/Users/evandarrenchristanto/Documents/Personal/Projects/dev/untangled-v2/src/calendar.js\",\n  _s = $RefreshSig$();\nimport NavBar from \"./components/navbar\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction'; // For clickable events\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const res = await axios.get('http://localhost:3001/fetch-calendar-events', {\n          withCredentials: true\n        });\n        // Transform events to the format FullCalendar expects\n        const transformedEvents = res.data.map(event => {\n          // Ensure that both `start` and `end` exist, and handle all-day events properly\n          const start = event.start ? event.start.dateTime || event.start.date : null;\n          const end = event.end ? event.end.dateTime || event.end.date : null;\n          return {\n            title: event.summary,\n            start: start,\n            end: end,\n            allDay: event.start.date ? true : false // if there is only date, assume it's an all-day event\n          };\n        });\n        setEvents(transformedEvents);\n      } catch (error) {\n        console.error('Error fetching calendar events:', error);\n      }\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Calendar Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      eventClick: clickInfo => {\n        // Handle event click\n        alert(clickInfo.event.title);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["NavBar","FullCalendar","dayGridPlugin","interactionPlugin","axios","useEffect","useState","jsxDEV","_jsxDEV","Home","_s","events","setEvents","fetchEvents","res","get","withCredentials","transformedEvents","data","map","event","start","dateTime","date","end","title","summary","allDay","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","eventClick","clickInfo","alert","_c","$RefreshReg$"],"sources":["/Users/evandarrenchristanto/Documents/Personal/Projects/dev/untangled-v2/src/calendar.js"],"sourcesContent":["import NavBar from \"./components/navbar\"\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction'; // For clickable events\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nexport default function Home() {\n    const [events, setEvents] = useState([]);\n\n    useEffect(() => {\n      const fetchEvents = async () => {\n        try {\n          const res = await axios.get('http://localhost:3001/fetch-calendar-events', { withCredentials: true });\n          // Transform events to the format FullCalendar expects\n          const transformedEvents = res.data.map(event => {\n            // Ensure that both `start` and `end` exist, and handle all-day events properly\n            const start = event.start ? (event.start.dateTime || event.start.date) : null;\n            const end = event.end ? (event.end.dateTime || event.end.date) : null;\n        \n            return {\n                title: event.summary,\n                start: start,\n                end: end,\n                allDay: event.start.date ? true : false // if there is only date, assume it's an all-day event\n            };\n        });\n          setEvents(transformedEvents);\n        } catch (error) {\n          console.error('Error fetching calendar events:', error);\n        }\n      };\n      fetchEvents();\n    }, []);\n\n    return (\n        <div>\n            \n            <h1>My Calendar Events</h1>\n            <FullCalendar\n      plugins={[dayGridPlugin, interactionPlugin]}\n      initialView=\"dayGridMonth\"\n      events={events}\n      eventClick={(clickInfo) => {\n        // Handle event click\n        alert(clickInfo.event.title);\n      }}\n    />\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,iBAAiB,MAAM,2BAA2B,CAAC,CAAC;AAC3D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,6CAA6C,EAAE;UAAEC,eAAe,EAAE;QAAK,CAAC,CAAC;QACrG;QACA,MAAMC,iBAAiB,GAAGH,GAAG,CAACI,IAAI,CAACC,GAAG,CAACC,KAAK,IAAI;UAC9C;UACA,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAAK,GAAID,KAAK,CAACC,KAAK,CAACC,QAAQ,IAAIF,KAAK,CAACC,KAAK,CAACE,IAAI,GAAI,IAAI;UAC7E,MAAMC,GAAG,GAAGJ,KAAK,CAACI,GAAG,GAAIJ,KAAK,CAACI,GAAG,CAACF,QAAQ,IAAIF,KAAK,CAACI,GAAG,CAACD,IAAI,GAAI,IAAI;UAErE,OAAO;YACHE,KAAK,EAAEL,KAAK,CAACM,OAAO;YACpBL,KAAK,EAAEA,KAAK;YACZG,GAAG,EAAEA,GAAG;YACRG,MAAM,EAAEP,KAAK,CAACC,KAAK,CAACE,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC;UAC5C,CAAC;QACL,CAAC,CAAC;QACAX,SAAS,CAACK,iBAAiB,CAAC;MAC9B,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IACDf,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAsB,QAAA,gBAEItB,OAAA;MAAAsB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3B1B,OAAA,CAACP,YAAY;MACnBkC,OAAO,EAAE,CAACjC,aAAa,EAAEC,iBAAiB,CAAE;MAC5CiC,WAAW,EAAC,cAAc;MAC1BzB,MAAM,EAAEA,MAAO;MACf0B,UAAU,EAAGC,SAAS,IAAK;QACzB;QACAC,KAAK,CAACD,SAAS,CAAClB,KAAK,CAACK,KAAK,CAAC;MAC9B;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEd;AAACxB,EAAA,CA3CuBD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}